import"../chunks/Bzak7iHL.js";import{p as D,v as y,f as N,b as _,c as $,s as v,d as g,r as f,n as C}from"../chunks/CJVsommG.js";import{d as T,e as k}from"../chunks/Bvs2wB4v.js";import{e as U,i as O}from"../chunks/DTXUD98A.js";import{r as x}from"../chunks/CQT5mLoH.js";import{b as j}from"../chunks/B6hzIB13.js";import{b as q}from"../chunks/Bznqzo7l.js";import{a as B}from"../chunks/Cz0CWeBA.js";import{g as I}from"../chunks/BYlzNyLa.js";class l extends Error{}l.prototype.name="InvalidTokenError";function J(o){return decodeURIComponent(atob(o).replace(/(.)/g,(a,e)=>{let t=e.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t="0"+t),"%"+t}))}function P(o){let a=o.replace(/-/g,"+").replace(/_/g,"/");switch(a.length%4){case 0:break;case 2:a+="==";break;case 3:a+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return J(a)}catch{return atob(a)}}function A(o,a){if(typeof o!="string")throw new l("Invalid token specified: must be a string");a||(a={});const e=a.header===!0?0:1,t=o.split(".")[e];if(typeof t!="string")throw new l(`Invalid token specified: missing part #${e+1}`);let d;try{d=P(t)}catch(c){throw new l(`Invalid token specified: invalid base64 for part #${e+1} (${c.message})`)}try{return JSON.parse(d)}catch(c){throw new l(`Invalid token specified: invalid json for part #${e+1} (${c.message})`)}}var R=N('<input type="password" maxlength="1" inputmode="numeric" placeholder="â€¢" class="w-7 h-7 text-3xl text-center rounded-lg border" required/>'),z=N(`<div class="h-screen justify-center items-center flex"><form class="bg-gradient-to-br from-[#7d1b1f] to-red-700
flex-center flex-col w-[75%] rounded-2xl outline-2 outline-white shadow-2xl shadow-cyan-800 p-2  md:w-1/3 "><div class="text-white m-2 font-semibold text-center">Enter your staff name and pin</div> <div><label for="staffName" class="text-white">Staff Name:</label> <input id="staffName" type="name" required/></div> <label for="pin" class="text-white">Pin:</label> <div class="flex gap-1"></div> <div><button class="text-black bg-white hover:bg-green-400" type="submit">Sign In</button></div></form></div>`);function X(o,a){D(a,!0);let e=y({staffName:"",pin:["","","","","",""]}),t=y([]);const d=(n,s)=>{const r=n.target.value.replace(/\D/,"");e.pin[s]=r,r&&s<t.length-1&&t[s+1].focus()},c=(n,s)=>{n.key==="Backspace"&&!e.pin[s]&&s>0&&t[s-1].focus()},S=async n=>{n.preventDefault(),e.pin=e.pin.join(""),console.log(e);const r=await(await fetch("/api/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json();if(console.log(r),r.jwt){B.set("token",r.jwt,{expires:1,path:"/"});const i=A(r.jwt);return await I("/admin/login"),i}if(!r.jwt)throw alert("wrong info"),I("/"),new Error("Invalid response from server")};var m=z(),u=g(m),h=v(g(u),2),b=v(g(h),2);x(b),f(h);var w=v(h,4);U(w,21,()=>e.pin,O,(n,s,r)=>{var i=R();x(i),i.__input=p=>d(p,r),i.__keydown=p=>c(p,r),q(i,(p,E)=>t[E]=p,p=>t==null?void 0:t[p],()=>[r]),k("focus",i,()=>e.pin[r]=""),j(i,()=>e.pin[r],p=>e.pin[r]=p),_(n,i)}),f(w),C(2),f(u),f(m),k("submit",u,S),j(b,()=>e.staffName,n=>e.staffName=n),_(o,m),$()}T(["input","keydown"]);export{X as component};
